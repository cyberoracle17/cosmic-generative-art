let particles = [];
let flowfield;
let cols, rows;
let scl = 20;
let zoff = 0;
let fr;

function setup() {
  createCanvas(windowWidth, windowHeight);
  colorMode(HSB, 255);
  background(0);
  cols = floor(width / scl);
  rows = floor(height / scl);
  flowfield = new Array(cols * rows);
  fr = createP('');
  
  // Generate lots of particles
  for (let i = 0; i < 3000; i++) {
    particles[i] = new Particle();
  }
}

function draw() {
  let yoff = 0;
  for (let y = 0; y < rows; y++) {
    let xoff = 0;
    for (let x = 0; x < cols; x++) {
      let index = x + y * cols;
      let angle = noise(xoff, yoff, zoff) * TWO_PI * 4;
      let v = p5.Vector.fromAngle(angle);
      v.setMag(0.5);
      flowfield[index] = v;
      xoff += 0.1;
    }
    yoff += 0.1;
  }
  zoff += 0.003; // Animate the flow

  for (let i = 0; i < particles.length; i++) {
    particles[i].follow(flowfield);
    particles[i].update();
    particles[i].edges();
    particles[i].show();
  }
}

class Particle {
  constructor() {
    this.pos = createVector(random(width), random(height));
    this.vel = createVector(0, 0);
    this.acc = createVector(0, 0);
    this.maxspeed = 2;
    this.h = random(255); // color hue
  }

  follow(vectors) {
    let x = floor(this.pos.x / scl);
    let y = floor(this.pos.y / scl);
    let index = x + y * cols;
    let force = vectors[index];
    this.applyForce(force);
  }

  applyForce(force) {
    this.acc.add(force);
  }

  update() {
    this.vel.add(this.acc);
    this.vel.limit(this.maxspeed);
    this.pos.add(this.vel);
    this.acc.mult(0);
    this.h += 0.5; // slowly shift color hue
    if (this.h > 255) this.h = 0;
  }

  show() {
    stroke(this.h, 255, 255, 20);
    strokeWeight(1);
    point(this.pos.x, this.pos.y);
  }

  edges() {
    if (this.pos.x > width) this.pos.x = 0;
    if (this.pos.x < 0) this.pos.x = width;
    if (this.pos.y > height) this.pos.y = 0;
    if (this.pos.y < 0) this.pos.y = height;
  }
}

function mouseMoved() {
  // Add a reactive effect to mouse movement
  for (let p of particles) {
    let d = dist(mouseX, mouseY, p.pos.x, p.pos.y);
    if (d < 100) {
      let repel = p5.Vector.sub(p.pos, createVector(mouseX, mouseY));
      repel.setMag(0.5);
      p.applyForce(repel);
    }
  }
}

function keyPressed() {
  // Press 's' to save a screenshot
  if (key === 's') {
    saveCanvas('generative_art', 'png');
  }
}
